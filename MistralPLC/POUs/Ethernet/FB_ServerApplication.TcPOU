<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_ServerApplication" Id="{208a84a4-6539-4b0d-bc5c-df08c922da8b}" SpecialFunc="None">
    <Declaration><![CDATA[///----------------------- Simple TCP/IP application. Adapt this code to match your needs. ----
FUNCTION_BLOCK FB_ServerApplication
VAR_IN_OUT
	/// TX fifo 
	fbTx: FB_FrameFifo;
	/// RX fifo 
	fbRx: FB_FrameFifo;
	/// Log/debug/error fifo 
	fbLog: FB_LogFifo;
	bReadScan: BOOL;
	sFromClient: STRING;
END_VAR
VAR
	sToClient: T_MaxString := '';
	sLogMessage: T_MaxString := '';
	nCounter: UDINT;
	sFrom_Client:STRING;
END_VAR
VAR_OUTPUT
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*------------------------------- Get received message strings ------------------------------------------*)
REPEAT

	fbRx.RemoveHead( );(* Fetch received string from rx fifo *)
	IF fbRx.bOk THEN(* Success *)

		(*TODO: Implement receive data handler *)
	//	nCounter := nCounter + 1;
		sFrom_Client := fbRx.sGet;
		sFromClient:= LEFT(sFrom_Client,LEN(sFrom_Client)-2 );
		bReadScan:=TRUE;
	//	sToClient 	:= sFromClient;

		(* Send received string back to the client *)
	(*	fbTx.AddTail( sPut := sToClient );(* Add string to the tx fifo *)
		IF NOT fbTx.bOk THEN(* Fifo overflow => log error *)
			fbLog.Error( sMessage := 'FB_FrameFifo(sender)', nErrID := PLCPRJ_ERROR_SENDFIFO_OVERFLOW );
		END_IF*)
	END_IF

UNTIL NOT fbRx.bOk
END_REPEAT



(*------------------------------- Get log/error messages from log fifo ----------------------------------------*)
REPEAT
	fbLog.Remove( );
	IF fbLog.bOk THEN

		(* TODO: Implement log message handler *)
		sLogMessage := fbLog.sGet;

	END_IF
UNTIL NOT fbLog.bOk
END_REPEAT

]]></ST>
    </Implementation>
    <LineIds Name="FB_ServerApplication">
      <LineId Id="3" Count="8" />
      <LineId Id="59" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="12" Count="25" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>